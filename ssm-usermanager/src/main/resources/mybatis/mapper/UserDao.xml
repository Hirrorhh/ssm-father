<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="cn.ssm.usermanager.dao.UserDao">
<cache/>
<resultMap type="User" id="userResultMap">
<id column="id" property="id"/>
<result column="user_name" property="userName"/>
</resultMap>
<sql id="user_sqlColumns">
	id,user_name,name,age,sex,birthday,updated
</sql>
  <select id="queryUserById" resultMap="userResultMap">
    select * from tb_user where id = #{id}
  </select>
  <select id="queryAll" resultMap="userResultMap">
  	SELECT *,user_name AS userName FROM tb_user
  </select>
  <update id="updateUser" parameterType="User">
  UPDATE tb_user
		<set>
			<if test="userName != null and userName.trim() != ''">
			user_name = #{userName},
			</if>
			<if test="password != null and password.trim() != ''">
			password = #{password},
			</if>
			<if test="name != null and name.trim() != ''">
			name = #{name},
			</if>
			<if test="age != null">
			age = #{age},
			</if>
			<if test="sex != null">
			sex = #{sex},
			</if>
			<if test="birthday != null">
			birthday = #{birthday},
			</if>
			updated = NOW()
			</set> 
		WHERE
			id = #{id};
  </update>
  <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
  INSERT INTO tb_user (
						id,
						user_name,
						password,
						name,
						age,
						sex,
						birthday,
						created,
						updated
					)
					VALUES(
						NULL,
						#{userName},
						#{password},
						#{name},
						#{age},
						#{sex},
						#{birthday},
						NOW(),
						NOW()
						);
  </insert>
  <!-- 删除用户 -->
	<delete id="deleteUserById" parameterType="java.lang.Long">
		DELETE FROM tb_user WHERE id = #{id}
	</delete>
	<select id="queryUserByUserNameAndPassword" resultMap="userResultMap">
	select <include refid="user_sqlColumns"></include> from tb_user where user_name = #{userName} and password = #{passWord}
	</select>
	<select id="queryUserByNameLike" parameterType="User" resultMap="userResultMap">
	 select <include refid="user_sqlColumns"/> from tb_user where sex = 1 
		<if test="name != null and name.trim() != ''"></if> and name like "%${name}%"
	</select>
	<select id="queryUserBySort" resultMap="userResultMap">
		select * from tb_user 
			<choose>
				<when test="sortType == 1">
					order by age asc
				</when>
				<otherwise>
					order by age desc
				</otherwise>
			</choose>
	</select>
	<select id="queryUserByIds" resultMap="userResultMap">
		select * from tb_user where id in 
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
		#{id}
		</foreach>
	</select>
	<select id="queryUserByIdsString" resultMap="userResultMap">
		select * from tb_user where id in (${ids})
	</select>
	<select id="queryUserByNameLikeAndAge" resultMap="userResultMap">
		select * from tb_user <where>
		<if test="name != null and name != ''">name like '%${name}%'</if>
		<if test="age &gt; 0 ">and age <![CDATA[ > ]]> #{age}</if>
		</where>
	</select>
</mapper>